// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/sejamuchhal/taskhub/task/storage (interfaces: StorageInterface)
//
// Generated by this command:
//
//	mockgen --build_flags=--mod=mod --destination=./storage/mock_storage/storage.go github.com/sejamuchhal/taskhub/task/storage StorageInterface
//

// Package mock_storage is a generated GoMock package.
package mock_storage

import (
	reflect "reflect"

	storage "github.com/sejamuchhal/taskhub/task/storage"
	gomock "go.uber.org/mock/gomock"
)

// MockStorageInterface is a mock of StorageInterface interface.
type MockStorageInterface struct {
	ctrl     *gomock.Controller
	recorder *MockStorageInterfaceMockRecorder
}

// MockStorageInterfaceMockRecorder is the mock recorder for MockStorageInterface.
type MockStorageInterfaceMockRecorder struct {
	mock *MockStorageInterface
}

// NewMockStorageInterface creates a new mock instance.
func NewMockStorageInterface(ctrl *gomock.Controller) *MockStorageInterface {
	mock := &MockStorageInterface{ctrl: ctrl}
	mock.recorder = &MockStorageInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorageInterface) EXPECT() *MockStorageInterfaceMockRecorder {
	return m.recorder
}

// CreateTask mocks base method.
func (m *MockStorageInterface) CreateTask(arg0 *storage.Task) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTask", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateTask indicates an expected call of CreateTask.
func (mr *MockStorageInterfaceMockRecorder) CreateTask(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTask", reflect.TypeOf((*MockStorageInterface)(nil).CreateTask), arg0)
}

// DeleteTask mocks base method.
func (m *MockStorageInterface) DeleteTask(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTask", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteTask indicates an expected call of DeleteTask.
func (mr *MockStorageInterfaceMockRecorder) DeleteTask(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTask", reflect.TypeOf((*MockStorageInterface)(nil).DeleteTask), arg0)
}

// GetTaskByID mocks base method.
func (m *MockStorageInterface) GetTaskByID(arg0 string) (*storage.Task, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTaskByID", arg0)
	ret0, _ := ret[0].(*storage.Task)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTaskByID indicates an expected call of GetTaskByID.
func (mr *MockStorageInterfaceMockRecorder) GetTaskByID(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTaskByID", reflect.TypeOf((*MockStorageInterface)(nil).GetTaskByID), arg0)
}

// ListTasksWithCount mocks base method.
func (m *MockStorageInterface) ListTasksWithCount(arg0 string, arg1, arg2 int) ([]*storage.Task, int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTasksWithCount", arg0, arg1, arg2)
	ret0, _ := ret[0].([]*storage.Task)
	ret1, _ := ret[1].(int64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListTasksWithCount indicates an expected call of ListTasksWithCount.
func (mr *MockStorageInterfaceMockRecorder) ListTasksWithCount(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTasksWithCount", reflect.TypeOf((*MockStorageInterface)(nil).ListTasksWithCount), arg0, arg1, arg2)
}

// UpdateTask mocks base method.
func (m *MockStorageInterface) UpdateTask(arg0 *storage.Task) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateTask", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateTask indicates an expected call of UpdateTask.
func (mr *MockStorageInterfaceMockRecorder) UpdateTask(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTask", reflect.TypeOf((*MockStorageInterface)(nil).UpdateTask), arg0)
}
